В связи со стремительным развитием информационных технологий и постоянным возникновением
не встречавшихся ранее задач периодически появляются новые способы проектирования, структурирования,
записи компьютерных программ.

\emph{Реактивное программирование (РП)} — возникшая относительно
недавно и активно исследуемая в настоящее время парадигма программирования, ориентированная
на работу с динамическими потоками данных. Большой интерес представляет ее использование
в сочетании с \emph{функциональным программированием (ФП)}, в этом случае говорят о
\emph{функциональном реактивном программировании (ФРП)}.

В данной лабораторной работе рассматривается применение функционального реактивного программирования
в разработке приложений на примере компьютерной игры <<Тетрис>>\cite{wiki:tetris}.

\phantomsection
\addcontentsline{toc}{subsection}{Функциональное реактивное программирование}
\subsection*{Функциональное реактивное программирование}
Функциональное реактивное программирование (англ. \emph{functional reactive programming}, FRP)
--- способ моделирования динамических, реагирующих на внешние воздействия систем
в функциональных языках программирования в терминах \emph{событий} и \emph{сигналов}\citep{amsdensurvey}.
События происходят в определенные моменты времени (например: при щелчке мыши, срабатывании таймера, ...)
и опционально содержат в себе дополнительную информацию (координаты курсора, текущее время, ...) — параметр события.
Сигналы можно рассматривать как функции времени, определенные в каждой точке в течение выполнения программы.

Функциональное реактивное программирование впервые было предложено Коналом Эллиоттом (Conal Elliott)
в 1997 году при разработке \emph{FRAN}\citep{fran} --- функционального предметно-ориентированного языка программирования,
предназначенного для описания анимации.
Данный подход, предлагая альтернативу фон-неймановскому стилю программирования, и обладая
высокой степенью выразительности и лаконичности, был по достоинству оценен как
специалистами в области функционального программирования\citep{modsynth,robotics},
так и разработчиками императивных языков\citep{csrx}.
